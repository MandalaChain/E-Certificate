/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AssetContract,
  AssetContractInterface,
} from "../../contracts/AssetContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DataAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "DataAlreadyRedeemed",
    type: "error",
  },
  {
    inputs: [],
    name: "DataExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "DataNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "DocumentAlreadyApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "DocumentNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenId",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCompatibleWithSpotMints",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "SequentialMintExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "SequentialUpToTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "SpotMintTokenIdTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "extendDate",
        type: "uint256",
      },
    ],
    name: "DataExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "docType",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdDated",
        type: "uint256",
      },
    ],
    name: "DataIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    name: "DataValidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "docTypeHash",
        type: "bytes32",
      },
    ],
    name: "DocumentApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "redeemedBy",
        type: "address",
      },
    ],
    name: "Redeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "onChainUrl",
        type: "string",
      },
    ],
    name: "SetDataURL",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "docType",
        type: "string",
      },
    ],
    name: "approveDocType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "docType",
        type: "bytes32",
      },
    ],
    name: "getAssetData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "dataOwner",
            type: "address",
          },
          {
            internalType: "string",
            name: "data",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdDated",
            type: "uint256",
          },
          {
            internalType: "enum AssetContract.AssetStatus",
            name: "assetStatus",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "onChainUrl",
            type: "string",
          },
        ],
        internalType: "struct AssetContract.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "docType",
        type: "bytes32",
      },
    ],
    name: "getDateMintingData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "docType",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "assetData",
        type: "string",
      },
    ],
    name: "mintData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "docType",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "assetData",
        type: "string",
      },
    ],
    name: "mintDataWithCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "docType",
        type: "bytes32",
      },
    ],
    name: "redeemData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_client",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setApproveClient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "docType",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "setOnChainURL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "docType",
        type: "bytes32",
      },
    ],
    name: "verifyData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f3938038062001f398339810160408190526200003491620001b9565b3382826002620000458382620002b4565b506003620000548282620002b4565b50600160005550506001600160a01b0381166200008b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000096816200009f565b50505062000380565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011957600080fd5b81516001600160401b0380821115620001365762000136620000f1565b604051601f8301601f19908116603f01168101908282118183101715620001615762000161620000f1565b81604052838152602092508660208588010111156200017f57600080fd5b600091505b83821015620001a3578582018301518183018401529082019062000184565b6000602085830101528094505050505092915050565b60008060408385031215620001cd57600080fd5b82516001600160401b0380821115620001e557600080fd5b620001f38683870162000107565b935060208501519150808211156200020a57600080fd5b50620002198582860162000107565b9150509250929050565b600181811c908216806200023857607f821691505b6020821081036200025957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002af576000816000526020600020601f850160051c810160208610156200028a5750805b601f850160051c820191505b81811015620002ab5782815560010162000296565b5050505b505050565b81516001600160401b03811115620002d057620002d0620000f1565b620002e881620002e1845462000223565b846200025f565b602080601f831160018114620003205760008415620003075750858301515b600019600386901b1c1916600185901b178555620002ab565b600085815260208120601f198616915b82811015620003515788860151825594840194600190910190840162000330565b5085821015620003705787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ba980620003906000396000f3fe6080604052600436106101815760003560e01c80638b7c620d116100d1578063b410cc821161008a578063d40998d511610064578063d40998d514610444578063e985e9c514610464578063eacfeaee146104ad578063f2fde38b146104cd57600080fd5b8063b410cc82146103f1578063b88d4fde14610411578063c87b56dd1461042457600080fd5b80638b7c620d146103315780638da5cb5b1461035e57806395d89b411461037c5780639b67aeaf14610391578063a22cb465146103b1578063ae870014146103d157600080fd5b8063427f84081161013e5780635fbb4e2d116101185780635fbb4e2d146102bc5780636352211e146102dc57806370a08231146102fc578063715018a61461031c57600080fd5b8063427f84081461026957806342842e0e146102895780635e79d1ac1461029c57600080fd5b806301ffc9a71461018657806306fdde03146101bb578063081812fc146101dd578063095ea7b31461021557806318160ddd1461022a57806323b872dd14610256575b600080fd5b34801561019257600080fd5b506101a66101a136600461156e565b6104ed565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101d061053f565b6040516101b291906115db565b3480156101e957600080fd5b506101fd6101f83660046115ee565b6105d1565b6040516001600160a01b0390911681526020016101b2565b61022861022336600461161e565b61060c565b005b34801561023657600080fd5b50610248600154600054036000190190565b6040519081526020016101b2565b610228610264366004611648565b610661565b34801561027557600080fd5b50610228610284366004611730565b6107d3565b610228610297366004611648565b61087b565b3480156102a857600080fd5b506102286102b7366004611765565b61089b565b3480156102c857600080fd5b506102286102d7366004611787565b61095f565b3480156102e857600080fd5b506101fd6102f73660046115ee565b6109eb565b34801561030857600080fd5b506102486103173660046117d7565b6109f6565b34801561032857600080fd5b50610228610a3c565b34801561033d57600080fd5b5061035161034c366004611765565b610a50565b6040516101b29190611808565b34801561036a57600080fd5b506009546001600160a01b03166101fd565b34801561038857600080fd5b506101d0610a6d565b34801561039d57600080fd5b506102286103ac366004611787565b610a7c565b3480156103bd57600080fd5b506102286103cc366004611890565b610a87565b3480156103dd57600080fd5b506102286103ec366004611765565b610abd565b3480156103fd57600080fd5b5061024861040c366004611765565b610b76565b61022861041f3660046118cc565b610bf0565b34801561043057600080fd5b506101d061043f3660046115ee565b610c31565b34801561045057600080fd5b5061022861045f366004611890565b610cb9565b34801561047057600080fd5b506101a661047f366004611948565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156104b957600080fd5b506102286104c8366004611787565b610cec565b3480156104d957600080fd5b506102286104e83660046117d7565b610d12565b60006301ffc9a760e01b6001600160e01b03198316148061051e57506380ac58cd60e01b6001600160e01b03198316145b806105395750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461054e9061197b565b80601f016020809104026020016040519081016040528092919081815260200182805461057a9061197b565b80156105c75780601f1061059c576101008083540402835291602001916105c7565b820191906000526020600020905b8154815290600101906020018083116105aa57829003601f168201915b5050505050905090565b60006105dc82610d55565b6105f0576105f06333d1c03960e21b610da3565b506000908152600660205260409020546001600160a01b031690565b610614610dad565b6001600160a01b0382161580159061062a575080155b1561064857604051638cd22d1960e01b815260040160405180910390fd5b604051638cd22d1960e01b815260040160405180910390fd5b600061066c82610dda565b6001600160a01b0394851694909150811684146106925761069262a1148160e81b610da3565b60008281526006602052604090208054338082146001600160a01b038816909114176106d6576106c2863361047f565b6106d6576106d6632ce44b5f60e11b610da3565b6106e38686866001610e7b565b80156106ee57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b841690036107805760018401600081815260046020526040812054900361077e57600054811461077e5760008181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4806000036107ca576107ca633a954ecd60e21b610da3565b50505050505050565b6107db610dad565b6000816040516020016107ee91906115db565b60408051601f1981840301815291815281516020928301206000818152600b90935291205490915060ff161561083757604051630eac193960e01b815260040160405180910390fd5b6000818152600b6020526040808220805460ff191660011790555182917f11da6ec2ddf5c8626e732b24b465547f83dee16329ac45bc7a6bb7f716350ebb91a25050565b61089683838360405180602001604052806000815250610bf0565b505050565b33816108a682610ebe565b6108af81610ef6565b6000806108bc8686610f25565b90925090506001826060015160028111156108d9576108d96117f2565b036108f7576040516374efe6ed60e01b815260040160405180910390fd5b6000818152600d60209081526040808320888452825291829020600301805460ff19166001179055815183815233918101919091527fc5fcfb68332ef11d542d4ab7e75045a5e4d66eb2d8f846f13a48356b32e534db910160405180910390a1505050505050565b338261096a82610ebe565b61097381610ef6565b600061097f8686610f25565b6000818152600d602090815260408083208a8452909152902090925060040190506109aa8582611a05565b50807f4916f4324221a8197e34dcf501a5a247d65a6c38b44b742d2fb35b61f4b20247856040516109db91906115db565b60405180910390a2505050505050565b600061053982610dda565b60006001600160a01b038216610a1657610a166323d3ad8160e21b610da3565b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610a44610dad565b610a4e600061112c565b565b610a5861150f565b6000610a648484610f25565b50949350505050565b60606003805461054e9061197b565b61089683838361117e565b6001600160a01b0382161580159061062a575060018115150361064857604051638cd22d1960e01b815260040160405180910390fd5b6000610ac98383610f25565b509050600181606001516002811115610ae457610ae46117f2565b03610b02576040516374efe6ed60e01b815260040160405180910390fd5b600281606001516002811115610b1a57610b1a6117f2565b03610b385760405163054879ab60e41b815260040160405180910390fd5b60408051848152600160208201527f9e68398c94bd1c813a49cf1bbd15b40674c1bf5b1126b782472f1801e944c04f910160405180910390a1505050565b6000828152600c6020526040812054808203610ba557604051635a3caa4f60e11b815260040160405180910390fd5b610bae81610d55565b610bcb576040516307ed98ed60e31b815260040160405180910390fd5b6000908152600d60209081526040808320858452909152902060020154905092915050565b610bfb848484610661565b6001600160a01b0383163b15610c2b57610c178484848461131c565b610c2b57610c2b6368d2bf6b60e11b610da3565b50505050565b6060610c3c82610d55565b610c5057610c50630a14c4b560e41b610da3565b6000610c6760408051602081019091526000815290565b90508051600003610c875760405180602001604052806000815250610cb2565b80610c91846113ff565b604051602001610ca2929190611ac5565b6040516020818303038152906040525b9392505050565b610cc1610dad565b6001600160a01b03919091166000908152600a60205260409020805460ff1916911515919091179055565b3382610cf782610ebe565b610d0081610ef6565b610d0b85858561117e565b5050505050565b610d1a610dad565b6001600160a01b038116610d4957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610d528161112c565b50565b600081600111610d9e57600054821015610d9e5760005b5060008281526004602052604081205490819003610d9457610d8d83611af4565b9250610d6c565b600160e01b161590505b919050565b8060005260046000fd5b6009546001600160a01b03163314610a4e5760405163118cdaa760e01b8152336004820152602401610d40565b600081600111610e6b575060008181526004602052604090205480600003610e58576000548210610e1557610e15636f96cda160e11b610da3565b5b50600019016000818152600460205260409020548015610e1657600160e01b8116600003610e4357919050565b610e53636f96cda160e11b610da3565b610e16565b600160e01b8116600003610e6b57919050565b610d9e636f96cda160e11b610da3565b6001600160a01b03841615801590610e9b57506001600160a01b03831615155b15610eb957604051638cd22d1960e01b815260040160405180910390fd5b610c2b565b6001600160a01b0381166000908152600a602052604090205460ff16610d52576040516282b42960e81b815260040160405180910390fd5b6000818152600b602052604090205460ff16610d525760405163990aec9960e01b815260040160405180910390fd5b610f2d61150f565b6000838152600c6020526040812054808203610f5c57604051635a3caa4f60e11b815260040160405180910390fd5b610f6581610d55565b610f8157604051626f708760e21b815260040160405180910390fd5b6000818152600d60209081526040808320878452825291829020825160a0810190935280546001600160a01b0316835260018101805491938593909285929184019190610fcd9061197b565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff99061197b565b80156110465780601f1061101b57610100808354040283529160200191611046565b820191906000526020600020905b81548152906001019060200180831161102957829003601f168201915b50505091835250506002828101546020830152600383015460409092019160ff1690811115611077576110776117f2565b6002811115611088576110886117f2565b815260200160048201805461109c9061197b565b80601f01602080910402602001604051908101604052809291908181526020018280546110c89061197b565b80156111155780601f106110ea57610100808354040283529160200191611115565b820191906000526020600020905b8154815290600101906020018083116110f857829003601f168201915b505050505081525050915092509250509250929050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000838152600c6020526040902054156111ab576040516303e8922960e01b815260040160405180910390fd5b6000828152600b602052604090205460ff166111da5760405163990aec9960e01b815260040160405180910390fd5b6000546009546111f4906001600160a01b03166001611443565b6000848152600c60209081526040808320849055805160a0810182523381528083018681524282840181905260608301869052835180860185528681526080840152868652600d855283862089875290945291909320835181546001600160a01b0319166001600160a01b039091161781559051919291600182019061127a9082611a05565b506040820151816002015560608201518160030160006101000a81548160ff021916908360028111156112af576112af6117f2565b0217905550608082015160048201906112c89082611a05565b50506040805133815260208101889052908101869052606081018390528391507f27036d66d130c1a9dff11a8482e7018b641f739251144e34ea5d1effb1e9642d9060800160405180910390a25050505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611351903390899088908890600401611b19565b6020604051808303816000875af192505050801561138c575060408051601f3d908101601f1916820190925261138991810190611b56565b60015b6113e1573d8080156113ba576040519150601f19603f3d011682016040523d82523d6000602084013e6113bf565b606091505b5080516000036113d9576113d96368d2bf6b60e11b610da3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806114195750819003601f19909101908152919050565b600080549082900361145f5761145f63b562e8dd60e01b610da3565b61146c6000848385610e7b565b60008181526004602090815260408083206001600160a01b0387164260a01b6001881460e11b178117909155808452600590925282208054680100000000000000018602019055908190036114ca576114ca622e076360e81b610da3565b818301825b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48181600101915081036114cf575060005550505050565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000600281111561154b5761154b6117f2565b8152602001606081525090565b6001600160e01b031981168114610d5257600080fd5b60006020828403121561158057600080fd5b8135610cb281611558565b60005b838110156115a657818101518382015260200161158e565b50506000910152565b600081518084526115c781602086016020860161158b565b601f01601f19169290920160200192915050565b602081526000610cb260208301846115af565b60006020828403121561160057600080fd5b5035919050565b80356001600160a01b0381168114610d9e57600080fd5b6000806040838503121561163157600080fd5b61163a83611607565b946020939093013593505050565b60008060006060848603121561165d57600080fd5b61166684611607565b925061167460208501611607565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156116b5576116b5611684565b604051601f8501601f19908116603f011681019082821181831017156116dd576116dd611684565b816040528093508581528686860111156116f657600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261172157600080fd5b610cb28383356020850161169a565b60006020828403121561174257600080fd5b813567ffffffffffffffff81111561175957600080fd5b6113f784828501611710565b6000806040838503121561177857600080fd5b50508035926020909101359150565b60008060006060848603121561179c57600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156117c157600080fd5b6117cd86828701611710565b9150509250925092565b6000602082840312156117e957600080fd5b610cb282611607565b634e487b7160e01b600052602160045260246000fd5b602080825282516001600160a01b03168282015282015160a0604083015260009061183660c08401826115af565b90506040840151606084015260608401516003811061186557634e487b7160e01b600052602160045260246000fd5b806080850152506080840151601f198483030160a085015261188782826115af565b95945050505050565b600080604083850312156118a357600080fd5b6118ac83611607565b9150602083013580151581146118c157600080fd5b809150509250929050565b600080600080608085870312156118e257600080fd5b6118eb85611607565b93506118f960208601611607565b925060408501359150606085013567ffffffffffffffff81111561191c57600080fd5b8501601f8101871361192d57600080fd5b61193c8782356020840161169a565b91505092959194509250565b6000806040838503121561195b57600080fd5b61196483611607565b915061197260208401611607565b90509250929050565b600181811c9082168061198f57607f821691505b6020821081036119af57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610896576000816000526020600020601f850160051c810160208610156119de5750805b601f850160051c820191505b818110156119fd578281556001016119ea565b505050505050565b815167ffffffffffffffff811115611a1f57611a1f611684565b611a3381611a2d845461197b565b846119b5565b602080601f831160018114611a685760008415611a505750858301515b600019600386901b1c1916600185901b1785556119fd565b600085815260208120601f198616915b82811015611a9757888601518255948401946001909101908401611a78565b5085821015611ab55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611ad781846020880161158b565b835190830190611aeb81836020880161158b565b01949350505050565b600081611b1157634e487b7160e01b600052601160045260246000fd5b506000190190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611b4c908301846115af565b9695505050505050565b600060208284031215611b6857600080fd5b8151610cb28161155856fea26469706673582212204f3bf4f53983246777950c35813d1bc8ea20b206d1bc2fe47c37db1f5912ad9a64736f6c63430008180033";

type AssetContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetContract__factory extends ContractFactory {
  constructor(...args: AssetContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override deploy(
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<
      AssetContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AssetContract__factory {
    return super.connect(runner) as AssetContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetContractInterface {
    return new Interface(_abi) as AssetContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AssetContract {
    return new Contract(address, _abi, runner) as unknown as AssetContract;
  }
}
